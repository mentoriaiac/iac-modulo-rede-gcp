name: "CI/CD do Terraform"

on:
  pull_request:
  
  push:
    branches:
      - main

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_KEY }}
  GCP_PROJECT_ID: ${{ secrets.PROJECT_ID }}

jobs:
  plan:
    name: 'terraform plan'
    runs-on: ubuntu-20.04
    
    defaults:
      run:
        working-directory: "how-to-use-this-module" 

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_KEY }}
          export_default_credentials: true
      
      - name: Use gcloud CLI
        run: gcloud info

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init 

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plandev
        run: terraform plan -no-color 

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve 
        
      - name: Terraform Plan
        id: destroy
        run: terraform destroy -auto-approve

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  
